#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'optparse'
require 'sequenceserver'

# display name for tools like `ps`
$PROGRAM_NAME = 'sequenceserver'

# e.g:
# sequenceserver --config .sequenceserver.conf format_database
begin
  # parse command line till first non-option, removing parsed options from ARGV
  OptionParser.new do |opts|
    opts.on('-c', '--config CONFIG_FILE', 'Use the given configuration file') do |config_file|
      SequenceServer::App.config_file = File.expand_path(config_file)
    end
  end.order!

  # of the remaining items in ARGV, the first one must be a subcommand
  subcommand = ARGV.shift

  if subcommand
    # process subcommands now

    case subcommand
    when 'format_database'
      require 'sequenceserver/database_formatter'
      exit
    else
      puts "invalid subcommand: #{subcommand}"
      puts "Run '#{$0} -h' for help with command line options."
      exit
    end
  end
rescue OptionParser::InvalidOption =>e
  puts e
  exit
end

SequenceServer::App.run!
